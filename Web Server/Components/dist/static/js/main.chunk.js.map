{"version":3,"file":"static/js/main.chunk.js","sources":["/home/robb/ROBB/Web Server/Components/src/index.tsx"],"sourcesContent":["import ZoomMtgEmbedded from \"@zoomus/websdk/embedded\";\nconst rootElement: HTMLElement = document.getElementById(\n  \"ZoomEmbeddedApp\"\n) as HTMLElement;\n\ndeclare global {\n  interface Window {\n    testTool: any;\n  }\n}\nconst testTool = window.testTool;\n// get meeting args from url\nconst tmpArgs = testTool.parseQuery();\nconst meetingConfig = {\n  sdkKey: tmpArgs.sdkKey,\n  meetingNumber: tmpArgs.mn,\n  userName: (function() {\n    if (tmpArgs.name) {\n      try {\n        return testTool.b64DecodeUnicode(tmpArgs.name);\n      } catch (e) {\n        return tmpArgs.name;\n      }\n    }\n    return (\n      \"CDN#\" +\n      tmpArgs.version +\n      \"#\" +\n      testTool.detectOS() +\n      \"#\" +\n      testTool.getBrowserInfo()\n    );\n  })(),\n  password: tmpArgs.pwd,\n  leaveUrl: \"/index.html\",\n  role: parseInt(tmpArgs.role, 10),\n  userEmail: (function() {\n    try {\n      return testTool.b64DecodeUnicode(tmpArgs.email);\n    } catch (e) {\n      return tmpArgs.email;\n    }\n  })(),\n  lang: tmpArgs.lang,\n  signature: tmpArgs.signature || \"\",\n  china: tmpArgs.china === \"1\",\n  webEndpoint: \"zoom.us\"\n};\n\nif (!meetingConfig.signature) {\n  window.location.href = \"./nav.html\";\n} else {\n  const zmClient = ZoomMtgEmbedded.createClient();\n\n  const tmpPort = window.location.port === \"\" ? \"\" : \":\" + window.location.port;\n  const avLibUrl =\n    window.location.protocol +\n    \"//\" +\n    window.location.hostname +\n    tmpPort +\n    \"/lib\";\n\n  zmClient\n    .init({\n      debug: true,\n      zoomAppRoot: rootElement,\n      assetPath: avLibUrl,\n      language: meetingConfig.lang\n    })\n    .then((e: any) => {\n      console.log(\"init success\", e);\n    })\n    .catch((e: any) => {\n      console.log(\"init error\", e);\n    });\n\n  // WebSDK Embedded join\n  zmClient\n    .join({\n      sdkKey: meetingConfig.sdkKey,\n      signature: meetingConfig.signature,\n      meetingNumber: meetingConfig.meetingNumber,\n      userName: meetingConfig.userName,\n      password: meetingConfig.password,\n      userEmail: meetingConfig.userEmail\n    })\n    .then((e: any) => {\n      console.log(\"join success\", e);\n    })\n    .catch((e: any) => {\n      console.log(\"join error\", e);\n    });\n}\n"],"mappings":";;;;;;;;;;;;;;;;AAAA;AACA;AASA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAQA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAjCA;AACA;AAmCA;AACA;AACA;AACA;AAEA;AACA;AAOA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AASA;AACA;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;A","sourceRoot":""}